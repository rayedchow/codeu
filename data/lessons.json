[
	{
		"unit": "Unit 1: Primitive Types",
		"text": [
			"A type is a set of values (e.g. integers, floaters, etc.) and a set of operations (e.g. +, -, *, /, etc.) on them.",
			"",
			"Data types can be categorized as either <b>primitive</b> or <b>reference</b>.",
			"",
			"The primitive types used in this course define the set of operations for numbers and boolean (true/false) values.",
			"Examples are <b>int</b>, <b>double</b>, and <b>boolean</b>.",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture2.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture2.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 1: Primitive Types",
			"type": 1,
			"question": "Which of these methods displays an input to the the computer monitor?",
			"options": [
				"System.in.print()",
				"print()",
				"System.out.print()",
				"System.out.input()"
			],
			"answer": 2,
			"explanation": "In java, System.out.print() or System.out.println() are the functions that print out inputs and values to the console/terminal."
		}
	},
	{
		"unit": "Unit 2: Using Objects",
		"text": [
			"A string is an object storing a sequence of text characters.",
			"- A string is not a primitive type. String is an object type",
			"",
			"Ways to initialize a string:",
			"- <code>String a = new String(\"text\");</code>",
			"- <code>String b = \"text\";</code>",
			"- <code>String c; c = \"text\";</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture6.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture6.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 2: Using Objects",
			"type": 1,
			"question": "Which of these are NOT a way to create the string 'test'?",
			"options": [
				"String test = \"hello\";",
				"String test: \"hello\"",
				"String test; test = \"hello\"",
				"String test = new String(\"hello\");"
			],
			"answer": 1,
			"explanation": "All of these are ways to create a string, except option B because ':' is not the character used to set a variable."
		}
	},
	{
		"unit": "Unit 3: Boolean Expressions and If Statements",
		"text": [
			"Operators can be used to compare values with each other to run code conditionally.",
			"",
			"Relational operators compare two numbers.",
			"Some examples are:",
			"  - ==",
			"  - >",
			"  - >=",
			"  - <",
			"  - <=",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture9.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture9.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 3: Boolean Expressions and If Statements",
			"type": 1,
			"question": "Which of these are NOT a relational operator?",
			"options": [
				"==",
				">",
				"<",
				"=<"
			],
			"answer": 3,
			"explanation": "All of these are operators that can be used for comparisons, except =<."
		}
	},
	{
		"unit": "Unit 4: Iterations",
		"text": [
			"A for loop is a type of loop that has a conditional statement that is usually false at first. Everytime the condition is false, the code block runs. However, it also has a statement that increments a variable after each time the code runs, making the conditional statement slowly become true.",
			"Once the condition is true, the block of code stops running.",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture11.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture11.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 4: Iteration",
			"type": 1,
			"question": "In for loops, when does the statement inside the loop execute?",
			"options": [
				"when i = 30",
				"when the condition being checked is false",
				"whenever i = 0",
				"when the condition being checked is true"
			],
			"answer": 3,
			"explanation": "A for loop has a conditional statement that lets the code block inside the loop run <b>until</b> the condition is true."
		}
	},
	{
		"unit": "Unit 5: Classes",
		"text": [
			"Once a java file runs, by default, it runs the main method. The main method is a public static method, and does not return anything",
			"The main method also can have input(s) as an array of strings.",
			"",
			"To intialize the main method, you write:",
			"<code>public static void main (String[] args) {//code here}</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture13.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture13.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 5: Classes",
			"type": 1,
			"question": "What is the main method's header?",
			"options": [
				"public static main (String[] args)",
				"public void main (String args)",
				"public static void main (String[] args)",
				"private static void main (String args)"
			],
			"answer": 2,
			"explanation": "The main method is a public, static, and a void method that is ran in the start of a default java file. The method also has an array of strings called 'args' that can be considered the input of a java file."
		}
	},
	{
		"unit": "Unit 6: Arrays",
		"text": [
			"If you are working with arrays(or other collections data structures), you can use an alternative syntax for a <b>for</b> loop (enhanced form of for loop) to iterate through items of arrays/collections.",
			"",
			"It is also referred as for-each loop because the loop iterates through each element of array/collection.",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture17.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture17.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 6: Arrays",
			"type": 1,
			"question": "What is a for-each loop used for?",
			"options": [
				"To loop until a condition is true",
				"To loop each variable created in a file",
				"To loop until a condition is false",
				"To loop through all items in an array"
			],
			"answer": 3,
			"explanation": "A for-<b>each</b> loop iterates through <b>each</b> item in an array, and it ends once it finishes doing so."
		}
	},
	{
		"unit": "Unit 7: ArrayLists",
		"text": [
			"An ArrayList (or list) is a collection storing an ordered sequence of elements.",
			"- each element is acccessible by a 0-based index",
			"- a list has a size (number of elements that have been added)",
			"- elements can be added to the front, back, or elsewhere",
			"- in Java, a list can be represented as an ArrayList object",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 7: ArrayLists",
			"type": 1,
			"question": "What is an ArrayList?",
			"options": [
				"A flexible array object that can change size.",
				"A static array that cannot change.",
				"A dynamic array that can have items with different datatypes.",
				"The same thing as an Array."
			],
			"answer": 0,
			"explanation": "An ArrayList is not the same thing as a standard java Array, it is a flexible array object that is not forced to have a size limit, and it can dynamically change its size as more items get added."
		}
	},
	{
		"unit": "Unit 8: 2D Arrays",
		"text": [
			"A two-dimensional (2D) array has rows and columns.",
			"A row has horizontal elements. A column has vertical elements.",
			"",
			"Two dimensional arrays are especially useful when the data is naturally organized in rows and columns like in a spreadsheet, bingo, battleship, theater seats, classroom seats, connect-four game, or a picture.",
			"",
			"To declare and initialzie a 2D array, write:",
			"<code>type[][] name = new type[row][col];</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 8: 2D Array",
			"type": 1,
			"question": "How do you declare a 2D Array of integers?",
			"options": [
				"ArrayList(int[]) numbers = new Type(int)[10][10];",
				"int[][] numbers = new int[10][10];",
				"int[[]] numbers = new int[10[10]];",
				"int[][] numbers = new Type(int)[10][10];"
			],
			"answer": 1,
			"explanation": "To create a 2D Array of integers, you write <code>int[][] numbers = new int[row#][col#]</code>"
		}
	},
	{
		"unit": "Unit 9: Overloading & Overriding",
		"text": [
			"A two-dimensional (2D) array has rows and columns.",
			"A row has horizontal elements. A column has vertical elements.",
			"",
			"Two dimensional arrays are especially useful when the data is naturally organized in rows and columns like in a spreadsheet, bingo, battleship, theater seats, classroom seats, connect-four game, or a picture.",
			"",
			"To declare and initialzie a 2D array, write:",
			"<code>type[][] name = new type[row][col];</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 8: 2D Array",
			"type": 1,
			"question": "How do you declare a 2D Array of integers?",
			"options": [
				"ArrayList(int[]) numbers = new Type(int)[10][10];",
				"int[][] numbers = new int[10][10];",
				"int[[]] numbers = new int[10[10]];",
				"int[][] numbers = new Type(int)[10][10];"
			],
			"answer": 1,
			"explanation": "To create a 2D Array of integers, you write <code>int[][] numbers = new int[row#][col#]</code>"
		}
	},
	{
		"unit": "Unit 10: Inheritance with Interface & Abstract Classes",
		"text": [
			"A two-dimensional (2D) array has rows and columns.",
			"A row has horizontal elements. A column has vertical elements.",
			"",
			"Two dimensional arrays are especially useful when the data is naturally organized in rows and columns like in a spreadsheet, bingo, battleship, theater seats, classroom seats, connect-four game, or a picture.",
			"",
			"To declare and initialzie a 2D array, write:",
			"<code>type[][] name = new type[row][col];</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 8: 2D Array",
			"type": 1,
			"question": "How do you declare a 2D Array of integers?",
			"options": [
				"ArrayList(int[]) numbers = new Type(int)[10][10];",
				"int[][] numbers = new int[10][10];",
				"int[[]] numbers = new int[10[10]];",
				"int[][] numbers = new Type(int)[10][10];"
			],
			"answer": 1,
			"explanation": "To create a 2D Array of integers, you write <code>int[][] numbers = new int[row#][col#]</code>"
		}
	},
	{
		"unit": "Unit 11: Exception Handling",
		"text": [
			"A two-dimensional (2D) array has rows and columns.",
			"A row has horizontal elements. A column has vertical elements.",
			"",
			"Two dimensional arrays are especially useful when the data is naturally organized in rows and columns like in a spreadsheet, bingo, battleship, theater seats, classroom seats, connect-four game, or a picture.",
			"",
			"To declare and initialzie a 2D array, write:",
			"<code>type[][] name = new type[row][col];</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 8: 2D Array",
			"type": 1,
			"question": "How do you declare a 2D Array of integers?",
			"options": [
				"ArrayList(int[]) numbers = new Type(int)[10][10];",
				"int[][] numbers = new int[10][10];",
				"int[[]] numbers = new int[10[10]];",
				"int[][] numbers = new Type(int)[10][10];"
			],
			"answer": 1,
			"explanation": "To create a 2D Array of integers, you write <code>int[][] numbers = new int[row#][col#]</code>"
		}
	},
	{
		"unit": "Unit 12: Multithreading",
		"text": [
			"A two-dimensional (2D) array has rows and columns.",
			"A row has horizontal elements. A column has vertical elements.",
			"",
			"Two dimensional arrays are especially useful when the data is naturally organized in rows and columns like in a spreadsheet, bingo, battleship, theater seats, classroom seats, connect-four game, or a picture.",
			"",
			"To declare and initialzie a 2D array, write:",
			"<code>type[][] name = new type[row][col];</code>",
			"",
			"<i>Read more about this at <a  href=\"https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf\" target=\"_blank\">https://longbaonguyen.github.io/courses/apcsa/lecture18.pdf</a>.</i>"
		],
		"question": {
			"unit": "Unit 8: 2D Array",
			"type": 1,
			"question": "How do you declare a 2D Array of integers?",
			"options": [
				"ArrayList(int[]) numbers = new Type(int)[10][10];",
				"int[][] numbers = new int[10][10];",
				"int[[]] numbers = new int[10[10]];",
				"int[][] numbers = new Type(int)[10][10];"
			],
			"answer": 1,
			"explanation": "To create a 2D Array of integers, you write <code>int[][] numbers = new int[row#][col#]</code>"
		}
	}
]